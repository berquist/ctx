## ---------------------------------------------------------------------
##
## Copyright (C) 2017 by the ctx authors
##
## This file is part of ctx.
##
## ctx is free software: you can redistribute it and/or modify
## it under the terms of the GNU Lesser General Public License as published
## by the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## ctx is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with ctx. If not, see <http://www.gnu.org/licenses/>.
##
## ---------------------------------------------------------------------

## This file is provided for compatibility with Q-Chem's libctx.
## It is of no other use inside this library.

cmake_minimum_required(VERSION 3.0.0)

#
# Determine build type
#
# For setting the proper compile definitions for the Debug and Release
# interface of krims and ctx.
set(build "RELEASE")
set(SUFFIX "")
if (NOT CMAKE_BUILD_TYPE MATCHES "Release")
	set(SUFFIX ".g")
        set(build "DEBUG")
endif()

#
# Find ctx
#
find_library(CTX_LIBRARY
	ctx${SUFFIX}
	PATHS
	${LIBCTX_DIR}/build/src/ctx
	${CMAKE_SOURCE_DIR}/../libctx/build/src/ctx
	${CMAKE_SOURCE_DIR}/../ctx/build/src/ctx
	${CMAKE_BINARY_DIR}/../libctx/src/ctx
	${CMAKE_BINARY_DIR}/../ctx/src/ctx
)
if(${CTX_LIBRARY} MATCHES "-NOTFOUND")
	message(FATAL_ERROR "Could not find ctx library at the expected place.")
else()
	message(STATUS "Found ctx at ${CTX_LIBRARY}")
endif()

#
# Find krims
#
find_library(KRIMS_LIBRARY
	krims${SUFFIX}
	PATHS
	${LIBCTX_DIR}/build/external/krims/src/krims
	${CMAKE_SOURCE_DIR}/../krims/build/src/krims
	${CMAKE_BINARY_DIR}/../krims/src/krims
)
if(${KRIMS_LIBRARY} MATCHES "-NOTFOUND")
	message(FATAL_ERROR "Could not find krims library at the expected place: ${LIBCTX_DIR}/build/external/krims")
else()
	message(STATUS "Found krims at ${KRIMS_LIBRARY}")
endif()

find_path(KRIMS_INCLUDES
	"krims/version.hh"
	PATHS
	${LIBCTX_DIR}/external/krims/src
	${LIBCTX_DIR}/../krims/src
	${CMAKE_SOURCE_DIR}/external/krims/src
	${CMAKE_SOURCE_DIR}/../krims/src
)
if(${KRIMS_INCLUDES} MATCHES "-NOTFOUND")
	message(FATAL_ERROR "Could not find krims include headers at the expected place.")
else()
	message(STATUS "Found krims includes at ${KRIMS_INCLUDES}")
endif()

#
# Setup target
#
# This thing needs to be called ctx
add_library(ctx INTERFACE IMPORTED GLOBAL)
set_target_properties(ctx
       PROPERTIES
       INTERFACE_LINK_LIBRARIES "${CTX_LIBRARY};${KRIMS_LIBRARY}"
       INTERFACE_INCLUDE_DIRECTORIES "${LIBCTX_DIR}/src;${KRIMS_INCLUDES}"
       INTERFACE_COMPILE_DEFINITIONS "${build}=${build}"
)

# Even though we give this in the ctx target properties, this needs to be global, too.
include_directories("${LIBCTX_DIR}/src;${KRIMS_INCLUDES}")
add_definitions("-D${build}=${build}")

#
# Cleanup and publish
#
unset(build)
unset(SUFFIX)
set(LIBCTX_LIBS ctx)
